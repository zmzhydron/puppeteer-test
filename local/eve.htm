<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <style>
    #pp {
      height: 200px;
      width: 200px;
    }

    #menu {
      border: solid 1px red;
      width: 200px;
      position: absolute;
      display: none;
    }

    #menu.show {
      display: block;
    }

    #a {
      padding: 20px;
      border: solid 2px red;
    }

    #cap {
      width: 150px;
      height: 150px;
      background: fuchsia;
    }

    #b {
      padding: 20px;
      border: solid 2px olivedrab;
    }
  </style>
</head>

<body>
  <div id="pp">pp
    <button id="shit">eeee</button>
    <button id="copy">copy</button>
    <button id="phast">phast</button>
    <input type="text" id='shitman'>
  </div>
  <div id="a">
    <div id="cap" draggable="true"></div>
  </div>
  <select name="fuckyou" id="slee">
    <option value="1">1</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
  </select>
  <div id="b"></div>
  <div id="menu">
    <p>fuckyou</p>
    <p>bitch</p>
    <p>oy haha</p>
  </div>
</body>
<script>
  window._log = window.console.log;
  var myname = 'zhangmignzhi';
  _log(myname.substr(1, 3));
  _log(myname.substring(1, 3));
  window.onbeforeunload = function() {
    alert(1);
  }
  window.addEventListener('beforeunload', function(ev) {
    alert(1);
  }, false);
  var menu = document.getElementById(`menu`);
  document.oncontextmenu = function(e) {
    e.preventDefault();
    let cls = menu.className;
    if (cls === 'show') {
      menu.className = "";
    } else {

    }
    menu.className = `show`;
    menu.style.left = e.pageX + `px`;
    menu.style.top = e.pageY + `px`;
  }
  document.addEventListener('click', function(e) {
    if (e.button === 0) {
      menu.className = ``;
    }
    if (e.target.nodeName === 'HTML') {
      _log("binggo");
      var fake = document.createEvent("MouseEvents");
      fake.initMouseEvent("click", true, true, document.defaultView);
      document.querySelector("#shit").dispatchEvent(fake);
    }
  }, false);
  window.onload = function() {
    var shit = document.querySelector("#shit");
    var pp = document.querySelector("#pp");
    var input = document.querySelector("#shitman");
    var copy = document.getElementById("copy");
    var phast = document.getElementById("phast");
    var start = document.querySelector("#a");
    var dragele = document.querySelector("#cap");
    var end = document.querySelector("#b");
    let visual = 'link';
    phast.onclick = () => {
      let select = document.getElementById("slee");
      _log(select.options[select.selectedIndex].value);
    }
    const dragstart = e => {
      let obj = {
        id: event.target.id,
        data: {
          name: "zmz",
          age: 29
        }
      }
      event.dataTransfer.setData('TSe11xt', JSON.stringify(obj));
      //如果不设置e.dataTransfer.dropEffect的话，那么e.dataTransfer.dropEffect的值默认为effectAllowed的值
      event.dataTransfer.effectAllowed = 'move';
    }
    const drop = e => {
      let data = JSON.parse(e.dataTransfer.getData('TSe11xt'));
      e.target.appendChild(document.getElementById(data.id));
    }
    const dragover = e => {
      // 拖动到drop区域的时候屏蔽默认事件，让其能被drop
      e.preventDefault();
      e.dataTransfer.dropEffect = 'link';
    }
    dragele.addEventListener('dragstart', dragstart, false);
    start.addEventListener('dragover', dragover, false);
    end.addEventListener('dragover', dragover, false);
    start.addEventListener('drop', drop, false);
    end.addEventListener('drop', drop, false);

    copy.onclick = function(event) {
      _log(event.clipboardData);
      document.execCommand("copy");
    }
    input.addEventListener("textInput", function(e) {

    }, false);
    shit.addEventListener('click', (event) => {
      _log(event.eventPhase, `capture`);
      // event.stopImmediatePropagation();
    }, true);
    shit.addEventListener('click', (event) => {
      _log(event.eventPhase, ` bubble `);
      input.setSelectionRange(0, 2);
      _log(input.value.substring(input.selectionStart, input.selectionEnd));
      input.focus();

      // event.stopImmediatePropagation();
    }, false);
    pp.addEventListener('click', (event) => {
      _log(event.eventPhase, `bubble pp`);
    }, false);
  }
</script>

</html>